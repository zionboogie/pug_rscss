@charset "UTF-8";


/*#########################################################

基本設定

#########################################################*/

/* ========================================================
単位用設定
=========================================================*/
// 基本単位
$unit: 1rem; // フォントサイズ
$font-size: $unit*1.6; // 16px
$mg: 10px; // 余白の最小単位

/* ========================================================
色用設定
=========================================================*/
// カラー
$c-bg: #fff;	// 背景色
$c-text: #1b1b1b;	// フォントカラー
$c-line: #959595;	// 線の色
$c-anchor: #000;	// リンク色
$c-anchor-hover: #959595;	// ホバー時のリンク色
$c-anchor-active: #00a0e9; // アクティブ時のリンク色
$c-anchor-visited: $c-anchor; // 訪問済み時のリンク色
$c-anchor-focus: $c-anchor-hover; // フォーカス時のリンク色


/* ========================================================
フォント用設定
=========================================================*/
// フォント（import無し）
$font-family: "游ゴシック", YuGothic, "ヒラギノ角ゴ ProN W3", "Hiragino Kaku Gothic ProN", "Helvetica Neue", Helvetica, Arial, "メイリオ", Meiryo, sans-serif;

// フォント（Google Fonts）
// @import url('https://fonts.googleapis.com/css?family=Noto+Sans+JP&display=swap');
// font-family: "Noto Sans JP","ヒラギノ角ゴ ProN W3","Hiragino Kaku Gothic ProN","Helvetica Neue",Helvetica,Arial,"メイリオ",Meiryo,sans-serif


/*#########################################################

レイアウト用設定

#########################################################*/

/* ========================================================
mixin mq用の変数設定
=========================================================*/
/*
▼iOSデバイス
iPhone5: 320 × 568
iPhone 6-8: 375 × 667（1334x750）
iPhone 6-8 plus: 414 × 736（1920x1080）
iPhone X,XS,11Pro: 375 × 812（1125x2436）
iPhone XR,11: 414 × 896（828x1792）

iPad/iPad Mini: 768 × 1024
iPad Pro: 1024 × 1366
https://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions

▼ブートストラップ
xs： ～767px
sm： 768～991px
md： 992～1119px
lg： 1120px～
*/
$screen-sm-max: 767px;	// スマホ表示の最大値
$screen-md-max: 1023px;	// タブレット表示の最大値

/* ========================================================
メディアクエリ用Mixin
=========================================================*/
@mixin mq($breakpoint) {
	@media #{map-get($breakpoints, $breakpoint)} {
		@content;
	}
}

/*
ステップ1.モバイルファーストかデスクトップファーストかを選ぶ
ステップ2.該当する設定を有効化、その他をコメントアウトする。
ステップ3.選択したタイプにより、「▼モバイルファーストの例」、「▼デスクトップファーストの例」のどちらかを参考にブレイクポイントを設定する。
→実際の設定は_base.scssではなく、インポート元で行う。
*/

/*
// ステップ2：モバイルファースト用（デスクトップファーストの場合はコメントアウト）
$breakpoints: (
	// タブレット
	'md': 'screen and (min-width: ' + ($screen-sm-max + 1) + ') and (max-width: ' + ($screen-md-max) + ')',
	// デスクトップ
	'lg': 'screen and (min-width: ' + ($screen-sm-max + 1) + ')',
) !default;
*/

/*
// ステップ3：▼モバイルファーストの例
// メディアクエリのブロック外にベースになるCSSを書く。
// モバイルファーストでは小さい画面サイズから順々に指定。
main{
	// デフォルト
	background: yellow;
	// タブレット
	@include mq(md){
		background: orange;
	}
	// デスクトップ
	@include mq(lg){
		background: red;
	}
}
//------------------------------
*/

// ステップ2：デスクトップファースト用（モバイルファーストの場合はコメントアウト）
$breakpoints: (
	// タブレット
	'md': 'screen and (min-width: ' + ($screen-sm-max + 1) + ') and (max-width: ' + $screen-md-max + ')',
	// スマートフォン
	'sm': 'screen and (max-width: ' + $screen-sm-max + ')',
) !default;

/*
// ステップ3：▼デスクトップファーストの例
// メディアクエリのブロック外にベースになるCSSを書く。
// デスクトップファーストでは大きい画面サイズから順々に指定。
main{
	// デフォルト
	background: red;
	// タブレット
	@include mq(md){
		background: orange;
	}
	// スマートフォン
	@include mq(sm){
		background: yellow;
	}
}
//------------------------------
*/

// コンテンツ幅
$w-content: 1080px;

// コンテンツ幅エリアのプレースホルダ
%w-content {
	margin: auto;
	width: $w-content;
	padding: 0 $mg*4;
	@include mq(sm){
		padding: 0;
		width: 95%;
	}
}



/*#########################################################

パーツ

#########################################################*/

/* ========================================================
矢印
使い方：
@include arrow(矢印の線の長さ, 矢印の線の幅, 矢印の色);

例：
@include arrow(8px, 2px, #003b83);
=========================================================*/
@mixin arrow($ARROW-LEN, $ARROW-WIDTH, $ARROW-COLOR) {
	%ARROW-O-BEFORE{
		width: $ARROW-LEN;
		height: $ARROW-LEN;
		border-top: $ARROW-WIDTH solid $ARROW-COLOR;
		border-right: $ARROW-WIDTH solid $ARROW-COLOR;
	}
	%ARROW-AFTER{
		width: $ARROW-LEN;
		height: $ARROW-LEN;
		border-top: $ARROW-WIDTH solid $ARROW-COLOR;
		border-right: $ARROW-WIDTH solid $ARROW-COLOR;
	}
	.arrow {
		position: relative;
		display: inline-block;
		vertical-align: middle;
		text-decoration: none;
		text-indent: -10000px;
		width: $ARROW-LEN;
		height: $ARROW-LEN;
		&::after,
		&::before {
			top: 0;
			bottom: 0;
			left: 0;
			position: absolute;
			content: "";
			margin: auto;
			vertical-align: middle;
		}
		// 上下オープン矢印
		&.-opendown::before,
		&.-openup::before {
			@extend %ARROW-O-BEFORE;
			transform: rotate(-45deg);
		}
		&.-opendown::before{
			transform: rotate(135deg);
		}
		// 左右オープン矢印
		&.-openleft::before,
		&.-openright::before {
			@extend %ARROW-O-BEFORE;
			transform: rotate(45deg);
		}
		&.-openleft::before{
			transform: rotate(-135deg);
		}
	
		// 上下矢印
		&.-up,
		&.-down{
			width: $ARROW-LEN;
			&::before{
				right: 0;
				width: $ARROW-WIDTH;
				height: $ARROW-LEN;
				background: $ARROW-COLOR;
			}
			&::after{
				@extend %ARROW-AFTER;
				transform: rotate(-45deg);
			}
		}
		&.-down{
			&::after{
				transform: rotate(135deg);
			}
		}
	
		// 左右矢印
		&.-left,
		&.-right{
			&::before{
				width: $ARROW-LEN;
				height: $ARROW-WIDTH;
				background: $ARROW-COLOR;
			}
			&::after{
				@extend %ARROW-AFTER;
				transform: rotate(45deg);
			}
		}
		&.-left::after{
			transform: rotate(-135deg);
		}

		&.-upperright::before{
			left: 3px;
			width: 31px;
			height: $ARROW-LEN;
			background: $ARROW-COLOR;
		}
		&.-upperright::after{
			top: -3px;
			left: 30px;
			width: 6px;
			height: 0;
			border-top: 1px solid $ARROW-COLOR;
			border-right: 1px solid $ARROW-COLOR;
			-webkit-transform: rotate(45deg);
			transform: rotate(45deg);
		}
	}
}

/* ========================================================
リボン
使い方：
@include arrow(矢印の長さ, 矢印の幅, りぼんの色, テキストの色);

例：
@include arrow(14px, 10px, #E10000, #FFFFFF);
=========================================================*/
@mixin ribon($LEN, $WIDTH, $BCOLOR, $FCOLOR){
	height: $LEN*2;
	display: flex;
	align-items: center;
	background-color: $BCOLOR;
	color: $FCOLOR;
	&:before {
		content: '';
		position: absolute;
		top: 100%;
		left: 0;
		border: none;
		// border-right: solid 5px #E10000;
		border-bottom: solid 5px transparent;
	}
	&:after {
		content: '';
		position: absolute;
		width: 0;
		height: 0;
		top: 0;
		right: -$WIDTH;
		z-index: 1;
		border-style: solid;
		border-width: $LEN $WIDTH $LEN 0;
		border-color: $BCOLOR transparent;
	}

}
